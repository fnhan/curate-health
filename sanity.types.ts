// Query TypeMap
import "@sanity/client";

/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type FeedbackLink = {
  _id: string;
  _type: "feedbackLink";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  linkText?: string;
  youformId?: string;
};

export type AboutPages = {
  _id: string;
  _type: "aboutPages";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  isActive?: boolean;
};

export type LegalPage = {
  _id: string;
  _type: "legalPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  slug?: Slug;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  publishedAt?: string;
  published?: boolean;
  slug?: Slug;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  excerpt?: string;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  sections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  seo?: Seo;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type CafePage = {
  _id: string;
  _type: "cafePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  pageActive?: boolean;
  heroSection?: {
    heroImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
  };
  additionalSections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  seo?: Seo;
};

export type Treatments = {
  _id: string;
  _type: "treatments";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  isActive?: boolean;
  service?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  };
  treatmentSlug?: Slug;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    heroAlt?: string;
    _type: "image";
  };
  intro?: {
    subtitle?: string;
    introParagraph?: string;
  };
  quoteContent?: string;
  additionalSections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  benefits?: {
    title?: string;
    benefitsList?: Array<{
      title?: string;
      subtitle?: string;
      _key: string;
    }>;
  };
  cta?: {
    ctaBg?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    ctaBgAlt?: string;
    ctaTitle?: string;
    ctaText?: string;
    ctaButtonText?: string;
  };
  seo?: Seo;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isActive?: boolean;
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
  title?: string;
  slug?: Slug;
  hero_image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  content_image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  seo?: Seo;
};

export type Product = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isActive?: boolean;
  title?: string;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  banner?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  accordioninfo?: Array<{
    title?: string;
    description?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    _type: "accordionitems";
    _key: string;
  }>;
  callToAction?: {
    ctaText?: string;
    ctaLink?: string;
    ctaSectionTitle?: string;
    ctaSectionDescription?: string;
  };
  seo?: Seo;
};

export type PrimaryCTAButton = {
  _id: string;
  _type: "primaryCTAButton";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  ctaButton?: {
    ctaText?: string;
    ctaLink?: string;
  };
};

export type SurveySection = {
  _id: string;
  _type: "surveySection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  bgImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  cta?: string;
  youformId?: string;
  content?: string;
  bold?: string;
};

export type ContactPage = {
  _id: string;
  _type: "contactPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroSection?: {
    title?: string;
    heroImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
  };
  mapURL?: string;
  businessHours?: {
    standardHours?:
      | "9:00 AM - 5:00 PM"
      | "9:00 AM - 6:00 PM"
      | "9:00 AM - 7:00 PM"
      | "10:00 AM - 7:00 PM"
      | "8:00 AM - 4:00 PM"
      | "custom";
    customStandardHours?: string;
    daysOpen?: Array<string>;
    exceptions?: Array<{
      day?:
        | "monday"
        | "tuesday"
        | "wednesday"
        | "thursday"
        | "friday"
        | "saturday"
        | "sunday";
      hours?: string;
      _key: string;
    }>;
  };
  seo?: Seo;
};

export type PillarsOfHealth = {
  _id: string;
  _type: "pillarsOfHealth";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  pageActive?: boolean;
  heroSection?: {
    heroTitle?: string;
    heroParagraph?: string;
    heroImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
  };
  pillars?: Array<{
    pillarName?: string;
    pillarDescription?: string;
    _key: string;
  }>;
  seo?: Seo;
};

export type Sustainability = {
  _id: string;
  _type: "sustainability";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  pageActive?: boolean;
  heroSection?: {
    heroTitle?: string;
    heroParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    heroImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
  };
  additionalSections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  ctaSection?: {
    ctaSectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    ctaSectionTitle?: string;
    ctaSectionParagraph?: string;
    ctaButton?: {
      buttonText?: string;
      buttonLink?: string;
    };
  };
  seo?: Seo;
};

export type MissionAndValues = {
  _id: string;
  _type: "missionAndValues";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  pageActive?: boolean;
  heroSection?: {
    heroImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
  };
  additionalSections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  seo?: Seo;
};

export type OurTeam = {
  _id: string;
  _type: "ourTeam";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  pageActive?: boolean;
  heroSection?: {
    heroTitle?: string;
    heroParagraph?: string;
  };
  teamMembers?: Array<{
    name?: string;
    role?: string;
    bio?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _type: "teamMember";
    _key: string;
  }>;
  seo?: Seo;
};

export type OurStory = {
  _id: string;
  _type: "ourStory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  pageActive?: boolean;
  heroSection?: {
    heroImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    heroTitle?: string;
    heroSubtitle?: string;
  };
  quoteSection?: {
    quoteImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    quoteText?: string;
  };
  additionalSections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  ctaSection?: {
    ctaSectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    ctaSectionTitle?: string;
    ctaSectionParagraph?: string;
    ctaButton?: {
      buttonText?: string;
      buttonLink?: string;
    };
  };
  seo?: Seo;
};

export type ServicesHeroSection = {
  _id: string;
  _type: "servicesHeroSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  subtitle?: string;
  seo?: Seo;
};

export type SustainabilitySection = {
  _id: string;
  _type: "sustainabilitySection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  bgImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  sustainText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
};

export type BlogSection = {
  _id: string;
  _type: "blogSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sectionTitle?: string;
  hoverLinkText?: string;
  hoverLinkHref?: string;
};

export type CafeSection = {
  _id: string;
  _type: "cafeSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  cafeImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
  hoverLinkText?: string;
  hoverLinkHref?: string;
};

export type ProductsSection = {
  _id: string;
  _type: "productsSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sectionTitle?: string;
  hoverLinkText?: string;
  hoverLinkHref?: string;
};

export type ServicesSection = {
  _id: string;
  _type: "servicesSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sectionTitle?: string;
  hoverLinkText?: string;
  hoverLinkHref?: string;
};

export type Clinic = {
  _id: string;
  _type: "clinic";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  clinicImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
};

export type AboutSection = {
  _id: string;
  _type: "aboutSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  aboutImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title1?: string;
  title2?: string;
  hoverLinkText?: string;
  hoverLinkHref?: string;
};

export type HeroSection = {
  _id: string;
  _type: "heroSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  videoID?: string;
  videoFile?: MuxVideo;
  heroText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
};

export type PopupBanner = {
  _id: string;
  _type: "popupBanner";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isActive?: boolean;
  title?: string;
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
};

export type NewsletterSection = {
  _id: string;
  _type: "newsletterSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  endpointUrl?: string;
};

export type SiteMetadata = {
  _id: string;
  _type: "siteMetadata";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  homePageTitle?: string;
  templateTitlePrefix?: string;
  defaultDescription?: string;
  favicon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  keywords?: Array<string>;
  socialMeta?: SocialMeta;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isComingSoon?: boolean;
  brandName?: string;
  siteLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  contactInfo?: {
    email?: string;
    phone?: string;
    address?: {
      street?: string;
      city?: string;
      state?: string;
      zip?: string;
      country?: string;
    };
    mapLink?: string;
  };
  services?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
  aboutPages?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "aboutPages";
  }>;
  navLinks?: Array<{
    title?: string;
    href?: string;
    _type: "navLink";
    _key: string;
  }>;
  footerNavLinks?: Array<{
    groupTitle?: string;
    links?: Array<{
      title?: string;
      slug?: Slug;
      _type: "navLink";
      _key: string;
    }>;
    _type: "navGroup";
    _key: string;
  }>;
  legalLinks?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "legalPage";
  }>;
  socialMedia?: Array<{
    platform?: string;
    url?: string;
    isActive?: boolean;
    _type: "socialLink";
    _key: string;
  }>;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Seo = {
  _type: "seo";
  pageTitle?: string;
  pageDescription?: string;
  socialMeta?: SocialMeta;
};

export type SocialMeta = {
  _type: "socialMeta";
  title?: string;
  description?: string;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  twitterImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
      listItem?: "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }
>;

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type MuxVideo = {
  _type: "mux.video";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "mux.videoAsset";
  };
};

export type MuxVideoAsset = {
  _type: "mux.videoAsset";
  status?: string;
  assetId?: string;
  playbackId?: string;
  filename?: string;
  thumbTime?: number;
  data?: MuxAssetData;
};

export type MuxAssetData = {
  _type: "mux.assetData";
  resolution_tier?: string;
  upload_id?: string;
  created_at?: string;
  id?: string;
  status?: string;
  max_stored_resolution?: string;
  passthrough?: string;
  encoding_tier?: string;
  master_access?: string;
  aspect_ratio?: string;
  duration?: number;
  max_stored_frame_rate?: number;
  mp4_support?: string;
  max_resolution_tier?: string;
  tracks?: Array<
    {
      _key: string;
    } & MuxTrack
  >;
  playback_ids?: Array<
    {
      _key: string;
    } & MuxPlaybackId
  >;
  static_renditions?: MuxStaticRenditions;
};

export type MuxStaticRenditions = {
  _type: "mux.staticRenditions";
  status?: string;
  files?: Array<
    {
      _key: string;
    } & MuxStaticRenditionFile
  >;
};

export type MuxStaticRenditionFile = {
  _type: "mux.staticRenditionFile";
  ext?: string;
  name?: string;
  width?: number;
  bitrate?: number;
  filesize?: number;
  height?: number;
};

export type MuxPlaybackId = {
  _type: "mux.playbackId";
  id?: string;
  policy?: string;
};

export type MuxTrack = {
  _type: "mux.track";
  id?: string;
  type?: string;
  max_width?: number;
  max_frame_rate?: number;
  duration?: number;
  max_height?: number;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | FeedbackLink
  | AboutPages
  | LegalPage
  | Post
  | Author
  | CafePage
  | Treatments
  | Service
  | Product
  | PrimaryCTAButton
  | SurveySection
  | ContactPage
  | PillarsOfHealth
  | Sustainability
  | MissionAndValues
  | OurTeam
  | OurStory
  | ServicesHeroSection
  | SustainabilitySection
  | BlogSection
  | CafeSection
  | ProductsSection
  | ServicesSection
  | Clinic
  | AboutSection
  | HeroSection
  | PopupBanner
  | NewsletterSection
  | SiteMetadata
  | SiteSettings
  | Slug
  | Seo
  | SocialMeta
  | BlockContent
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | MuxVideo
  | MuxVideoAsset
  | MuxAssetData
  | MuxStaticRenditions
  | MuxStaticRenditionFile
  | MuxPlaybackId
  | MuxTrack;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: SEO_QUERY
// Query: seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }
export type SEO_QUERYResult = never;
// Variable: POSTS_QUERY
// Query: *[_type == "post" && defined(slug)]
export type POSTS_QUERYResult = Array<{
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  publishedAt?: string;
  published?: boolean;
  slug?: Slug;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  excerpt?: string;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  sections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  seo?: Seo;
}>;
// Variable: POSTS_SLUG_QUERY
// Query: *[_type == "post" && defined(slug.current)][]{  "params": { "slug": slug.current },  }
export type POSTS_SLUG_QUERYResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: POST_QUERY
// Query: *[_type == "post" && slug.current == $slug][0]
export type POST_QUERYResult = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  publishedAt?: string;
  published?: boolean;
  slug?: Slug;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  excerpt?: string;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  sections?: Array<{
    sectionTitle?: string;
    sectionParagraph?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    sectionImage?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    _key: string;
  }>;
  seo?: Seo;
} | null;
// Variable: SUSTAINABILITY_SECTION_QUERY
// Query: *[_type == "sustainabilitySection"][0]{  bgImage {    asset->{      _id,      url    },    alt  },  sustainText}
export type SUSTAINABILITY_SECTION_QUERYResult = {
  bgImage: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
    alt: string | null;
  } | null;
  sustainText: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
} | null;
// Variable: ABOUT_SECTION_QUERY
// Query: *[_type == "aboutSection"][0]{  title1,  title2,  "aboutImage": {    "asset": aboutImage.asset->{      _id,      url    },    "alt": aboutImage.alt  },  hoverLinkText,  hoverLinkHref}
export type ABOUT_SECTION_QUERYResult = {
  title1: string | null;
  title2: string | null;
  aboutImage: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
    alt: string | null;
  };
  hoverLinkText: string | null;
  hoverLinkHref: string | null;
} | null;
// Variable: CLINIC_SECTION_QUERY
// Query: *[_type == "clinic"][0]{  "clinicImage": {    "asset": clinicImage.asset->{      _id,      url    },    "alt": clinicImage.alt  },  content}
export type CLINIC_SECTION_QUERYResult = {
  clinicImage: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
    alt: string | null;
  };
  content: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
} | null;
// Variable: CAFE_QUERY
// Query: *[_type == "cafeSection"][0] {  cafeImage {    asset-> {      _id,      url    },    alt  },  title,  content,  hoverLinkText,  hoverLinkHref,  meta {    title,    description  }}
export type CAFE_QUERYResult = {
  cafeImage: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
    alt: string | null;
  } | null;
  title: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  content: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  hoverLinkText: string | null;
  hoverLinkHref: string | null;
  meta: null;
} | null;
// Variable: BLOG_SECTION_QUERY
// Query: *[_type == "blogSection"][0]{  sectionTitle,  hoverLinkText,  hoverLinkHref}
export type BLOG_SECTION_QUERYResult = {
  sectionTitle: string | null;
  hoverLinkText: string | null;
  hoverLinkHref: string | null;
} | null;
// Variable: OURSERVICES_QUERY
// Query: *[_type == "ourServices"][0]{  title,  "image": image.asset->url,  content}
export type OURSERVICES_QUERYResult = null;
// Variable: SERVICES_QUERY
// Query: *[_type == "service" && isActive == true]{  "slug": slug.current,  "hero_image": hero_image.asset->url,  "altText": hero_image.alt,  }
export type SERVICES_QUERYResult = Array<{
  slug: string | null;
  hero_image: string | null;
  altText: string | null;
}>;
// Variable: ALL_SERVICES_QUERY
// Query: *[_type == "service" && isActive == true]{    title,    "slug": slug.current,    "hero_image": hero_image.asset->url,    "hero_alt": hero_image.alt,    }
export type ALL_SERVICES_QUERYResult = Array<{
  title: string | null;
  slug: string | null;
  hero_image: string | null;
  hero_alt: string | null;
}>;
// Variable: SERVICES_PAGE_QUERY
// Query: *[_type == "servicesHeroSection"][0]{  "heroSection": {    title,    "image": image.asset->url,    "alt": image.alt,    subtitle  },  "seo":   seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  },  "services": *[_type == "service" && isActive == true]{    title,    "slug": slug.current,    "hero_image": hero_image.asset->url,    "hero_alt": hero_image.alt,    },  }
export type SERVICES_PAGE_QUERYResult = {
  heroSection: {
    title: string | null;
    image: string | null;
    alt: string | null;
    subtitle: string | null;
  };
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
  services: Array<{
    title: string | null;
    slug: string | null;
    hero_image: string | null;
    hero_alt: string | null;
  }>;
} | null;
// Variable: SERVICES_SECTION_QUERY
// Query: *[_type == "servicesSection"][0]{  sectionTitle,  hoverLinkText,  hoverLinkHref,  "services": *[_type == "service" && isActive == true]{    title,    "slug": slug.current,    "hero_image": hero_image.asset->url,    "hero_alt": hero_image.alt  }}
export type SERVICES_SECTION_QUERYResult = {
  sectionTitle: string | null;
  hoverLinkText: string | null;
  hoverLinkHref: string | null;
  services: Array<{
    title: string | null;
    slug: string | null;
    hero_image: string | null;
    hero_alt: string | null;
  }>;
} | null;
// Variable: SERVICES_SLUG_QUERY
// Query: *[_type == "service" && isActive == true && defined(slug.current)] {  "params": {"slug": slug.current}}
export type SERVICES_SLUG_QUERYResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: SERVICE_BY_SLUG_QUERY
// Query: *[_type == "service" && slug.current == $slug][0]{    title,    "slug": slug.current,    "hero_image": hero_image.asset->url,    "hero_alt": hero_image.alt,    "content_image": content_image.asset->url,    "content_alt": content_image.alt,    content,    "treatments": *[_type == "treatments" && service._ref == ^._id && isActive == true]{      _id,      title,      "slug": treatmentSlug.current,    },      seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }  }
export type SERVICE_BY_SLUG_QUERYResult = {
  title: string | null;
  slug: string | null;
  hero_image: string | null;
  hero_alt: string | null;
  content_image: string | null;
  content_alt: string | null;
  content: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  treatments: Array<{
    _id: string;
    title: string | null;
    slug: string | null;
  }>;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: TREATMENTS_QUERY
// Query: *[_type == "treatments" && isActive == true]{  title,  "treatmentSlug": treatmentSlug.current,  "service": service->{    title,    "slug": slug.current  },  "image": image.asset->url,  "altText": image.alt,  content,}
export type TREATMENTS_QUERYResult = Array<{
  title: string | null;
  treatmentSlug: string | null;
  service: {
    title: string | null;
    slug: string | null;
  } | null;
  image: null;
  altText: null;
  content: null;
}>;
// Variable: METADATAS_QUERY
// Query: *[_type == "metadatas"]{  datas}
export type METADATAS_QUERYResult = Array<never>;
// Variable: METADATASone_QUERY
// Query: *[_type == "metadatas"][0]{  datas}
export type METADATASone_QUERYResult = null;
// Variable: MetaData_Slug
// Query: *[_type == "metadatas" && defined(slug.current) ][0]{  "params": {"slug": slug.current}}
export type MetaData_SlugResult = null;
// Variable: METADATA_BY_SLUG_QUERY
// Query: *[_type == "metadatas"]{    "meta":datas[slug.current == $slug][0]{      title,      description    }   }[0]
export type METADATA_BY_SLUG_QUERYResult = null;
// Variable: ANOTHERMETADATA_BY_SLUG_QUERY
// Query: *[_type == "metadatas" && datas[slug.current == $slug][0]]{      title,      description    }
export type ANOTHERMETADATA_BY_SLUG_QUERYResult = Array<never>;
// Variable: TREATMENT_BY_SLUG_QUERY
// Query: *[_type == "treatments" && isActive == true && treatmentSlug.current == $slug][0] {  title,  treatmentSlug,  "serviceName": service->title,  heroImage {    asset->{      url,          },    heroAlt  },  intro {    subtitle,    introParagraph  },  quoteContent,  additionalSections[] {    sectionTitle,    sectionParagraph,    sectionImage {      "image": image.asset->url,      alt    }  },    benefits {    title,    benefitsList[] {      title,      subtitle    }  },  cta {    ctaBg {      asset->{        url,        metadata {          dimensions        }      }    },    ctaBgAlt,    ctaTitle,    ctaText,    ctaButtonText  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type TREATMENT_BY_SLUG_QUERYResult = {
  title: string | null;
  treatmentSlug: Slug | null;
  serviceName: string | null;
  heroImage: {
    asset: {
      url: string | null;
    } | null;
    heroAlt: string | null;
  } | null;
  intro: {
    subtitle: string | null;
    introParagraph: string | null;
  } | null;
  quoteContent: string | null;
  additionalSections: Array<{
    sectionTitle: string | null;
    sectionParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    sectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
  }> | null;
  benefits: {
    title: string | null;
    benefitsList: Array<{
      title: string | null;
      subtitle: string | null;
    }> | null;
  } | null;
  cta: {
    ctaBg: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
    } | null;
    ctaBgAlt: string | null;
    ctaTitle: string | null;
    ctaText: string | null;
    ctaButtonText: string | null;
  } | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: FOOTER_QUERY
// Query: *[_type == "footer"][0] {    contactInfo {      sectionTitle,      details[] {        label,        value      }    },    servicesSection[]-> {      title,      "slug": slug.current,      image {        asset-> {          _id,          url        },        alt      }    },    sections[] {      title,      links[] {        text,        href      }    },    socialLinksSection {      title,      links[] {        platform,        url      }    },    privacy {      links[] {        title,        href      }    }  }
export type FOOTER_QUERYResult = null;
// Variable: PRODUCTS_SECTION_QUERY
// Query: *[_type == "productsSection"][0]{  sectionTitle,  hoverLinkText,  hoverLinkHref,  "products": *[_type == "product" && isActive == true]{    title,    description,    "slug": slug.current,    "image": image.asset->url,    "altText": image.alt  }}
export type PRODUCTS_SECTION_QUERYResult = {
  sectionTitle: string | null;
  hoverLinkText: string | null;
  hoverLinkHref: string | null;
  products: Array<{
    title: string | null;
    description: string | null;
    slug: string | null;
    image: string | null;
    altText: string | null;
  }>;
} | null;
// Variable: PRODUCTS_QUERY
// Query: *[_type == "product" && isActive == true] {  title,  indepthblockinfo,  description,  "slug" : slug.current,  "banner": banner.asset->url,  "image": image.asset->url,  "altText": image.alt,  meta {    title,    description  }}
export type PRODUCTS_QUERYResult = Array<{
  title: string | null;
  indepthblockinfo: null;
  description: string | null;
  slug: string | null;
  banner: string | null;
  image: string | null;
  altText: string | null;
  meta: null;
}>;
// Variable: PRODUCTS_NAVIGATION_QUERY
// Query: *[_type == "product" && isActive == true] {  title,  "slug": slug.current,}
export type PRODUCTS_NAVIGATION_QUERYResult = Array<{
  title: string | null;
  slug: string | null;
}>;
// Variable: PRODUCT_BY_SLUG_QUERY
// Query: *[_type == "product" && slug.current == $slug && isActive == true][0] {  title,  slug,  description,  image {    asset->,    alt  },  banner {    asset->,    alt  },  accordioninfo[] {    title,    description  },  callToAction,    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type PRODUCT_BY_SLUG_QUERYResult = {
  title: string | null;
  slug: Slug | null;
  description: string | null;
  image: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
    alt: string | null;
  } | null;
  banner: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
    alt: string | null;
  } | null;
  accordioninfo: Array<{
    title: string | null;
    description: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
  }> | null;
  callToAction: {
    ctaText?: string;
    ctaLink?: string;
    ctaSectionTitle?: string;
    ctaSectionDescription?: string;
  } | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: PRODUCT_QUERY
// Query: *[_type == "product" && slug.current == $slug][0]
export type PRODUCT_QUERYResult = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isActive?: boolean;
  title?: string;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  banner?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  accordioninfo?: Array<{
    title?: string;
    description?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    _type: "accordionitems";
    _key: string;
  }>;
  callToAction?: {
    ctaText?: string;
    ctaLink?: string;
    ctaSectionTitle?: string;
    ctaSectionDescription?: string;
  };
  seo?: Seo;
} | null;
// Variable: PRODUCT_SLUG_QUERY
// Query: *[_type == "product" && isActive == true && defined(slug.current)] {  "params": {"slug": slug.current}}
export type PRODUCT_SLUG_QUERYResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: NAVIGATION_QUERY
// Query: *[_type == "navigation"][0]{  serviceLinks[]->{    title,    "slug": slug.current  },  aboutLinks[]{    title,    href,  },  navItems[]{    linkText,    href,    isServiceLinks,    isAboutLinks  }}
export type NAVIGATION_QUERYResult = null;
// Variable: TERMS_OF_USE_QUERY
// Query: *[_type == "termOfUse"][0] {  title,  content,  meta {    title,    description  }}
export type TERMS_OF_USE_QUERYResult = null;
// Variable: PRIVACY_QUERY
// Query: *[_type == "privacy"][0] {  title,  content,  meta {    title,    description  }}
export type PRIVACY_QUERYResult = null;
// Variable: ACCESSIBILITY_QUERY
// Query: *[_type == "accessibility"][0] {  title,  content,  meta {    title,    description  }}
export type ACCESSIBILITY_QUERYResult = null;
// Variable: SURVEY_LINK_QUERY
// Query: *[_type == "surveySection"][0]{  bgImage {    asset-> {      _id,      url    },    alt  },  cta,  youformId,  content,  bold,  meta {    title,    description  }}
export type SURVEY_LINK_QUERYResult = {
  bgImage: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
    alt: string | null;
  } | null;
  cta: string | null;
  youformId: string | null;
  content: string | null;
  bold: string | null;
  meta: null;
} | null;
// Variable: POPUP_CONTENT_QUERY
// Query: *[_type == "popup" && isActive == true][0]{  title,  content,  isActive,}
export type POPUP_CONTENT_QUERYResult = null;
// Variable: FEEDBACK_LINK_QUERY
// Query: *[_type == "feedbackLink"][0]{  linkText,  youformId}
export type FEEDBACK_LINK_QUERYResult = {
  linkText: string | null;
  youformId: string | null;
} | null;
// Variable: ABOUT_PAGES_QUERY
// Query: *[_type == "aboutPage" && isActive == true] | order(_createdAt desc){  title,  "slug": slug.current,}
export type ABOUT_PAGES_QUERYResult = Array<never>;
// Variable: OUR_STORY_PAGE_QUERY
// Query: *[_type == "ourStory" && pageActive == true][0]{  heroSection{    heroImage{      "image": image.asset->url,      alt    },    heroTitle,    heroSubtitle  },  quoteSection{    quoteImage{      "image": image.asset->url,      alt    },    quoteText  },  additionalSections[]{    sectionTitle,    sectionParagraph,    sectionImage{      "image": image.asset->url,      alt    }  },  ctaSection{    ctaSectionImage{      "image": image.asset->url,      alt    },    ctaSectionTitle,    ctaSectionParagraph,    ctaButton{      buttonText,      buttonLink    }  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type OUR_STORY_PAGE_QUERYResult = {
  heroSection: {
    heroImage: {
      image: string | null;
      alt: string | null;
    } | null;
    heroTitle: string | null;
    heroSubtitle: string | null;
  } | null;
  quoteSection: {
    quoteImage: {
      image: string | null;
      alt: string | null;
    } | null;
    quoteText: string | null;
  } | null;
  additionalSections: Array<{
    sectionTitle: string | null;
    sectionParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    sectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
  }> | null;
  ctaSection: {
    ctaSectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
    ctaSectionTitle: string | null;
    ctaSectionParagraph: string | null;
    ctaButton: {
      buttonText: string | null;
      buttonLink: string | null;
    } | null;
  } | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: OUR_TEAM_PAGE_QUERY
// Query: *[_type == "ourTeam" && pageActive == true][0]{  heroSection{    heroTitle,    heroParagraph  },  teamMembers[] {    name,    role,    bio,    image {      asset-> {        url      }    }  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type OUR_TEAM_PAGE_QUERYResult = {
  heroSection: {
    heroTitle: string | null;
    heroParagraph: string | null;
  } | null;
  teamMembers: Array<{
    name: string | null;
    role: string | null;
    bio: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  }> | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: MISSION_AND_VALUES_QUERY
// Query: *[_type == "missionAndValues" && pageActive == true][0]{ heroSection{   heroImage{     image{       asset->     },     alt   } }, additionalSections[]{    sectionTitle,    sectionParagraph,    sectionImage{      "image": image.asset->url,      alt    }  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type MISSION_AND_VALUES_QUERYResult = {
  heroSection: {
    heroImage: {
      image: {
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
      } | null;
      alt: string | null;
    } | null;
  } | null;
  additionalSections: Array<{
    sectionTitle: string | null;
    sectionParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    sectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
  }> | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: SUSTAINABILITY_QUERY
// Query: *[_type == "sustainability" && pageActive == true][0] {  heroSection {    heroTitle,    heroParagraph,    heroImage {      "image": image.asset->url,      alt    }  },  additionalSections[] {    sectionTitle,    sectionParagraph,    sectionImage {      "image": image.asset->url,      alt    }  },  ctaSection {    ctaSectionImage {      "image": image.asset->url,      alt    },    ctaSectionTitle,    ctaSectionParagraph,    ctaButton {      buttonText,      buttonLink    }  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type SUSTAINABILITY_QUERYResult = {
  heroSection: {
    heroTitle: string | null;
    heroParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    heroImage: {
      image: string | null;
      alt: string | null;
    } | null;
  } | null;
  additionalSections: Array<{
    sectionTitle: string | null;
    sectionParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    sectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
  }> | null;
  ctaSection: {
    ctaSectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
    ctaSectionTitle: string | null;
    ctaSectionParagraph: string | null;
    ctaButton: {
      buttonText: string | null;
      buttonLink: string | null;
    } | null;
  } | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: PILLARS_OF_HEALTH_QUERY
// Query: *[_type == "pillarsOfHealth" && pageActive == true][0] {  heroSection {    heroTitle,    heroParagraph,    heroImage {      "image": image.asset->url,      alt    }  },  pillars[] {    pillarName,    pillarDescription  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type PILLARS_OF_HEALTH_QUERYResult = {
  heroSection: {
    heroTitle: string | null;
    heroParagraph: string | null;
    heroImage: {
      image: string | null;
      alt: string | null;
    } | null;
  } | null;
  pillars: Array<{
    pillarName: string | null;
    pillarDescription: string | null;
  }> | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: POPUP_BANNER_QUERY
// Query: *[_type == "popupBanner" && isActive == true][0]{  title,  content,}
export type POPUP_BANNER_QUERYResult = {
  title: string | null;
  content: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
} | null;
// Variable: FAVICON_QUERY
// Query: *[_type == "siteMetadata"]{  "url": favicon.asset->url}[0]
export type FAVICON_QUERYResult = {
  url: string | null;
} | null;
// Variable: SITE_METADATA_QUERY
// Query: *[_type == "siteMetadata"][0]{    homePageTitle,    templateTitlePrefix,    defaultDescription,    favicon {      asset -> {        url      }    },    keywords,    socialMeta {      title,      description,      ogImage {        asset -> {          url,          alt        }      },      twitterImage {        asset -> {          url,          alt        }      }    }  }
export type SITE_METADATA_QUERYResult = {
  homePageTitle: string | null;
  templateTitlePrefix: string | null;
  defaultDescription: string | null;
  favicon: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  keywords: Array<string> | null;
  socialMeta: {
    title: string | null;
    description: string | null;
    ogImage: {
      asset: {
        url: string | null;
        alt: null;
      } | null;
    } | null;
    twitterImage: {
      asset: {
        url: string | null;
        alt: null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: SITE_SETTINGS_QUERY
// Query: *[_type == "siteSettings"]{  brandName,  siteLogo{    asset->{      _id,      url    },  },  contactInfo{    email,    phone,    address{      street,      city,      state,      zip,      country    },    mapLink,  },  services[]->{    _key,    title,    "slug": slug.current,    isActive  },  "aboutPages": [    *[_type == "ourStory" && pageActive == true][0]{      "title": "Our Story",      "slug": "our-story"    },    *[_type == "ourTeam" && pageActive == true][0]{      "title": "Our Team",      "slug": "our-team"    },    *[_type == "missionAndValues" && pageActive == true][0]{      "title": "Mission and Values",      "slug": "mission-and-values"    },    *[_type == "sustainability" && pageActive == true][0]{      "title": "Sustainability",      "slug": "sustainability"    },    *[_type == "pillarsOfHealth" && pageActive == true][0]{      "title": "Pillars of Health",      "slug": "pillars-of-health"    },  ],  navLinks[]{    _key,    title,    href  },  footerNavLinks[]{    _key,    groupTitle,    links[]{      title,      slug {        current      }    }  },  legalLinks[]{    _key,    "title": @->title,    "slug": @->slug.current  },  socialMedia[]{    _key,    platform,    platformLogo{      asset->{        _id,        url      }    },    isActive,    url  }}[0]
export type SITE_SETTINGS_QUERYResult = {
  brandName: string | null;
  siteLogo: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
  } | null;
  contactInfo: {
    email: string | null;
    phone: string | null;
    address: {
      street: string | null;
      city: string | null;
      state: string | null;
      zip: string | null;
      country: string | null;
    } | null;
    mapLink: string | null;
  } | null;
  services: Array<{
    _key: null;
    title: string | null;
    slug: string | null;
    isActive: boolean | null;
  }> | null;
  aboutPages: Array<
    | {
        title: "Mission and Values";
        slug: "mission-and-values";
      }
    | null
    | {
        title: "Our Story";
        slug: "our-story";
      }
    | {
        title: "Our Team";
        slug: "our-team";
      }
    | {
        title: "Pillars of Health";
        slug: "pillars-of-health";
      }
    | {
        title: "Sustainability";
        slug: "sustainability";
      }
  >;
  navLinks: Array<{
    _key: string;
    title: string | null;
    href: string | null;
  }> | null;
  footerNavLinks: Array<{
    _key: string;
    groupTitle: string | null;
    links: Array<{
      title: string | null;
      slug: {
        current: string | null;
      } | null;
    }> | null;
  }> | null;
  legalLinks: Array<{
    _key: string;
    title: string | null;
    slug: string | null;
  }> | null;
  socialMedia: Array<{
    _key: string;
    platform: string | null;
    platformLogo: null;
    isActive: boolean | null;
    url: string | null;
  }> | null;
} | null;
// Variable: PRIMARY_CTA_BUTTON_QUERY
// Query: *[_type == "primaryCTAButton"][0]{    ctaButton{      ctaText,      ctaLink,    }  }
export type PRIMARY_CTA_BUTTON_QUERYResult = {
  ctaButton: {
    ctaText: string | null;
    ctaLink: string | null;
  } | null;
} | null;
// Variable: SURVEY_SECTION_QUERY
// Query: *[_type == "surveySection"][0]{  bgImage {    asset-> {      _id,      url    },    alt  },  cta,  youformId,  content,  bold,}
export type SURVEY_SECTION_QUERYResult = {
  bgImage: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
    alt: string | null;
  } | null;
  cta: string | null;
  youformId: string | null;
  content: string | null;
  bold: string | null;
} | null;
// Variable: NEWSLETTER_SECTION_QUERY
// Query: *[_type == "newsletterSection"][0]{  bgImage {    asset-> {      _id,      url    },    alt  },  cta,  youformId,  content,  bold,}
export type NEWSLETTER_SECTION_QUERYResult = {
  bgImage: null;
  cta: null;
  youformId: null;
  content: null;
  bold: null;
} | null;
// Variable: HERO_SECTION_QUERY
// Query: *[_type == "heroSection"][0]{  videoID,  videoFile {    asset-> {      playbackId    }  },  heroText,}
export type HERO_SECTION_QUERYResult = {
  videoID: string | null;
  videoFile: {
    asset: null;
  } | null;
  heroText: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
} | null;
// Variable: LAYOUT_QUERY
// Query: {  "siteSettings": *[_type == "siteSettings"]{  brandName,  siteLogo{    asset->{      _id,      url    },  },  contactInfo{    email,    phone,    address{      street,      city,      state,      zip,      country    },    mapLink,  },  services[]->{    _key,    title,    "slug": slug.current,    isActive  },  "aboutPages": [    *[_type == "ourStory" && pageActive == true][0]{      "title": "Our Story",      "slug": "our-story"    },    *[_type == "ourTeam" && pageActive == true][0]{      "title": "Our Team",      "slug": "our-team"    },    *[_type == "missionAndValues" && pageActive == true][0]{      "title": "Mission and Values",      "slug": "mission-and-values"    },    *[_type == "sustainability" && pageActive == true][0]{      "title": "Sustainability",      "slug": "sustainability"    },    *[_type == "pillarsOfHealth" && pageActive == true][0]{      "title": "Pillars of Health",      "slug": "pillars-of-health"    },  ],  navLinks[]{    _key,    title,    href  },  footerNavLinks[]{    _key,    groupTitle,    links[]{      title,      slug {        current      }    }  },  legalLinks[]{    _key,    "title": @->title,    "slug": @->slug.current  },  socialMedia[]{    _key,    platform,    platformLogo{      asset->{        _id,        url      }    },    isActive,    url  }}[0],  "primaryCTAButton":   *[_type == "primaryCTAButton"][0]{    ctaButton{      ctaText,      ctaLink,    }  },  "navLinks": *[_type == "navigation"][0]{  serviceLinks[]->{    title,    "slug": slug.current  },  aboutLinks[]{    title,    href,  },  navItems[]{    linkText,    href,    isServiceLinks,    isAboutLinks  }},  "newsletterSection": *[_type == "newsletterSection"][0]{  bgImage {    asset-> {      _id,      url    },    alt  },  cta,  youformId,  content,  bold,},  "surveySection": *[_type == "surveySection"][0]{  bgImage {    asset-> {      _id,      url    },    alt  },  cta,  youformId,  content,  bold,},  "footer":   *[_type == "footer"][0] {    contactInfo {      sectionTitle,      details[] {        label,        value      }    },    servicesSection[]-> {      title,      "slug": slug.current,      image {        asset-> {          _id,          url        },        alt      }    },    sections[] {      title,      links[] {        text,        href      }    },    socialLinksSection {      title,      links[] {        platform,        url      }    },    privacy {      links[] {        title,        href      }    }  },  "popupBanner": *[_type == "popupBanner" && isActive == true][0]{  title,  content,}}
export type LAYOUT_QUERYResult = {
  siteSettings: {
    brandName: string | null;
    siteLogo: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
    } | null;
    contactInfo: {
      email: string | null;
      phone: string | null;
      address: {
        street: string | null;
        city: string | null;
        state: string | null;
        zip: string | null;
        country: string | null;
      } | null;
      mapLink: string | null;
    } | null;
    services: Array<{
      _key: null;
      title: string | null;
      slug: string | null;
      isActive: boolean | null;
    }> | null;
    aboutPages: Array<
      | {
          title: "Mission and Values";
          slug: "mission-and-values";
        }
      | null
      | {
          title: "Our Story";
          slug: "our-story";
        }
      | {
          title: "Our Team";
          slug: "our-team";
        }
      | {
          title: "Pillars of Health";
          slug: "pillars-of-health";
        }
      | {
          title: "Sustainability";
          slug: "sustainability";
        }
    >;
    navLinks: Array<{
      _key: string;
      title: string | null;
      href: string | null;
    }> | null;
    footerNavLinks: Array<{
      _key: string;
      groupTitle: string | null;
      links: Array<{
        title: string | null;
        slug: {
          current: string | null;
        } | null;
      }> | null;
    }> | null;
    legalLinks: Array<{
      _key: string;
      title: string | null;
      slug: string | null;
    }> | null;
    socialMedia: Array<{
      _key: string;
      platform: string | null;
      platformLogo: null;
      isActive: boolean | null;
      url: string | null;
    }> | null;
  } | null;
  primaryCTAButton: {
    ctaButton: {
      ctaText: string | null;
      ctaLink: string | null;
    } | null;
  } | null;
  navLinks: null;
  newsletterSection: {
    bgImage: null;
    cta: null;
    youformId: null;
    content: null;
    bold: null;
  } | null;
  surveySection: {
    bgImage: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    cta: string | null;
    youformId: string | null;
    content: string | null;
    bold: string | null;
  } | null;
  footer: null;
  popupBanner: {
    title: string | null;
    content: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
  } | null;
};
// Variable: HOME_PAGE_QUERY
// Query: {  "heroSection": *[_type == "heroSection"][0]{  videoID,  videoFile {    asset-> {      playbackId    }  },  heroText,},  "primaryCTAButton":   *[_type == "primaryCTAButton"][0]{    ctaButton{      ctaText,      ctaLink,    }  },   "aboutSection": *[_type == "aboutSection"][0]{  title1,  title2,  "aboutImage": {    "asset": aboutImage.asset->{      _id,      url    },    "alt": aboutImage.alt  },  hoverLinkText,  hoverLinkHref},  "clinicSection": *[_type == "clinic"][0]{  "clinicImage": {    "asset": clinicImage.asset->{      _id,      url    },    "alt": clinicImage.alt  },  content},  "servicesSection": *[_type == "servicesSection"][0]{  sectionTitle,  hoverLinkText,  hoverLinkHref,  "services": *[_type == "service" && isActive == true]{    title,    "slug": slug.current,    "hero_image": hero_image.asset->url,    "hero_alt": hero_image.alt  }},  "productsSection": *[_type == "productsSection"][0]{  sectionTitle,  hoverLinkText,  hoverLinkHref,  "products": *[_type == "product" && isActive == true]{    title,    description,    "slug": slug.current,    "image": image.asset->url,    "altText": image.alt  }},  "cafeSection": *[_type == "cafeSection"][0] {  cafeImage {    asset-> {      _id,      url    },    alt  },  title,  content,  hoverLinkText,  hoverLinkHref,  meta {    title,    description  }},  "blogSection": *[_type == "blogSection"][0]{  sectionTitle,  hoverLinkText,  hoverLinkHref},  "sustainabilitySection": *[_type == "sustainabilitySection"][0]{  bgImage {    asset->{      _id,      url    },    alt  },  sustainText},  "navigation": *[_type == "navigation"][0]{  serviceLinks[]->{    title,    "slug": slug.current  },  aboutLinks[]{    title,    href,  },  navItems[]{    linkText,    href,    isServiceLinks,    isAboutLinks  }},  "termsOfUse": *[_type == "termOfUse"][0] {  title,  content,  meta {    title,    description  }},  "privacy": *[_type == "privacy"][0] {  title,  content,  meta {    title,    description  }},  "accessibility": *[_type == "accessibility"][0] {  title,  content,  meta {    title,    description  }},  "footer":   *[_type == "footer"][0] {    contactInfo {      sectionTitle,      details[] {        label,        value      }    },    servicesSection[]-> {      title,      "slug": slug.current,      image {        asset-> {          _id,          url        },        alt      }    },    sections[] {      title,      links[] {        text,        href      }    },    socialLinksSection {      title,      links[] {        platform,        url      }    },    privacy {      links[] {        title,        href      }    }  },}
export type HOME_PAGE_QUERYResult = {
  heroSection: {
    videoID: string | null;
    videoFile: {
      asset: null;
    } | null;
    heroText: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
  } | null;
  primaryCTAButton: {
    ctaButton: {
      ctaText: string | null;
      ctaLink: string | null;
    } | null;
  } | null;
  aboutSection: {
    title1: string | null;
    title2: string | null;
    aboutImage: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
      alt: string | null;
    };
    hoverLinkText: string | null;
    hoverLinkHref: string | null;
  } | null;
  clinicSection: {
    clinicImage: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
      alt: string | null;
    };
    content: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
  } | null;
  servicesSection: {
    sectionTitle: string | null;
    hoverLinkText: string | null;
    hoverLinkHref: string | null;
    services: Array<{
      title: string | null;
      slug: string | null;
      hero_image: string | null;
      hero_alt: string | null;
    }>;
  } | null;
  productsSection: {
    sectionTitle: string | null;
    hoverLinkText: string | null;
    hoverLinkHref: string | null;
    products: Array<{
      title: string | null;
      description: string | null;
      slug: string | null;
      image: string | null;
      altText: string | null;
    }>;
  } | null;
  cafeSection: {
    cafeImage: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    title: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    content: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    hoverLinkText: string | null;
    hoverLinkHref: string | null;
    meta: null;
  } | null;
  blogSection: {
    sectionTitle: string | null;
    hoverLinkText: string | null;
    hoverLinkHref: string | null;
  } | null;
  sustainabilitySection: {
    bgImage: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    sustainText: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
  } | null;
  navigation: null;
  termsOfUse: null;
  privacy: null;
  accessibility: null;
  footer: null;
};
// Variable: CONTACT_INFO_QUERY
// Query: *[_type == "siteSettings"][0]{  "brandName": brandName,  contactInfo{    email,    phone,    address{      street,      city,      state,      zip,      country    },    mapLink,  },}
export type CONTACT_INFO_QUERYResult = {
  brandName: string | null;
  contactInfo: {
    email: string | null;
    phone: string | null;
    address: {
      street: string | null;
      city: string | null;
      state: string | null;
      zip: string | null;
      country: string | null;
    } | null;
    mapLink: string | null;
  } | null;
} | null;
// Variable: CONTACT_PAGE_QUERY
// Query: {  "contactInfo": *[_type == "siteSettings"][0]{  "brandName": brandName,  contactInfo{    email,    phone,    address{      street,      city,      state,      zip,      country    },    mapLink,  },},  "page": *[_type == "contactPage"][0]{    heroSection{      title,      heroImage {        "image": image.asset->url,        alt      }    },    mapURL,    businessHours{      standardHours,      customStandardHours,      daysOpen,      exceptions[]{        day,        hours      }    },      seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }  },}
export type CONTACT_PAGE_QUERYResult = {
  contactInfo: {
    brandName: string | null;
    contactInfo: {
      email: string | null;
      phone: string | null;
      address: {
        street: string | null;
        city: string | null;
        state: string | null;
        zip: string | null;
        country: string | null;
      } | null;
      mapLink: string | null;
    } | null;
  } | null;
  page: {
    heroSection: {
      title: string | null;
      heroImage: {
        image: string | null;
        alt: string | null;
      } | null;
    } | null;
    mapURL: string | null;
    businessHours: {
      standardHours:
        | "10:00 AM - 7:00 PM"
        | "8:00 AM - 4:00 PM"
        | "9:00 AM - 5:00 PM"
        | "9:00 AM - 6:00 PM"
        | "9:00 AM - 7:00 PM"
        | "custom"
        | null;
      customStandardHours: string | null;
      daysOpen: Array<string> | null;
      exceptions: Array<{
        day:
          | "friday"
          | "monday"
          | "saturday"
          | "sunday"
          | "thursday"
          | "tuesday"
          | "wednesday"
          | null;
        hours: string | null;
      }> | null;
    } | null;
    seo: {
      pageTitle: string | null;
      pageDescription: string | null;
      socialMeta: {
        ogImage: {
          asset: {
            url: string | null;
            alt: null;
          } | null;
        } | null;
        twitterImage: {
          asset: {
            url: string | null;
            alt: null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | null;
};
// Variable: GET_ALL_POSTS_QUERY
// Query: *[_type == "post" && published == true] {  _id,  title,  publishedAt,  "slug": slug.current,  excerpt,  "author": author->{    name,    image {      asset-> {        url      }    }  },  mainImage {    asset->,    alt  },} | order(publishedAt desc)
export type GET_ALL_POSTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  publishedAt: string | null;
  slug: string | null;
  excerpt: string | null;
  author: {
    name: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  mainImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
    alt: string | null;
  } | null;
}>;
// Variable: GET_POST_BY_SLUG_QUERY
// Query: *[_type == "post" && published == true && slug.current == $slug][0] {  title,  publishedAt,  slug,  "author": author->{    name,    image {      asset-> {        url      }    }  },  "mainImage": {    "image": mainImage.asset->url,    "alt": mainImage.alt  },  sections[] {    sectionTitle,    sectionParagraph,    sectionImage {      "image": image.asset->url,      "alt": image.alt    }  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type GET_POST_BY_SLUG_QUERYResult = {
  title: string | null;
  publishedAt: string | null;
  slug: Slug | null;
  author: {
    name: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  mainImage: {
    image: string | null;
    alt: string | null;
  };
  sections: Array<{
    sectionTitle: string | null;
    sectionParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    sectionImage: {
      image: string | null;
      alt: null;
    } | null;
  }> | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: CAFE_PAGE_QUERY
// Query: *[_type == "cafePage" && pageActive == true][0]{ heroSection{   heroImage{     image{       asset->     },     alt   } }, additionalSections[]{    sectionTitle,    sectionParagraph,    sectionImage{      "image": image.asset->url,      alt    }  },    seo{    pageTitle,    pageDescription,    socialMeta{      ogImage{        asset-> {          url,          alt        }      },      twitterImage{        asset-> {          url,          alt        }      }    }  }}
export type CAFE_PAGE_QUERYResult = {
  heroSection: {
    heroImage: {
      image: {
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
      } | null;
      alt: string | null;
    } | null;
  } | null;
  additionalSections: Array<{
    sectionTitle: string | null;
    sectionParagraph: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    > | null;
    sectionImage: {
      image: string | null;
      alt: string | null;
    } | null;
  }> | null;
  seo: {
    pageTitle: string | null;
    pageDescription: string | null;
    socialMeta: {
      ogImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
      twitterImage: {
        asset: {
          url: string | null;
          alt: null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: SITEMAP_QUERY
// Query: {  "services": *[_type == "service" && isActive == true].slug.current,  "treatments": *[_type == "treatments" && isActive == true]{    "serviceSlug": service->slug.current,    "treatmentSlug": treatmentSlug.current  },  "products": *[_type == "product" && isActive == true].slug.current,  "posts": *[_type == "post" && defined(slug)].slug.current,  "team": *[_type == "ourTeam" && pageActive == true]{_id},  "story": *[_type == "ourStory" && pageActive == true]{_id},  "missionValues": *[_type == "missionAndValues" && pageActive == true]{_id},  "sustainability": *[_type == "sustainability" && pageActive == true]{_id},  "pillarsHealth": *[_type == "pillarsOfHealth" && pageActive == true]{_id},  "cafe": *[_type == "cafePage" && pageActive == true]{_id}}
export type SITEMAP_QUERYResult = {
  services: Array<string | null>;
  treatments: Array<{
    serviceSlug: string | null;
    treatmentSlug: string | null;
  }>;
  products: Array<string | null>;
  posts: Array<string | null>;
  team: Array<{
    _id: string;
  }>;
  story: Array<{
    _id: string;
  }>;
  missionValues: Array<{
    _id: string;
  }>;
  sustainability: Array<{
    _id: string;
  }>;
  pillarsHealth: Array<{
    _id: string;
  }>;
  cafe: Array<{
    _id: string;
  }>;
};

declare module "@sanity/client" {
  interface SanityQueries {
    "\n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n": SEO_QUERYResult;
    '*[_type == "post" && defined(slug)]': POSTS_QUERYResult;
    '*[_type == "post" && defined(slug.current)][]{\n  "params": { "slug": slug.current },\n  }': POSTS_SLUG_QUERYResult;
    '*[_type == "post" && slug.current == $slug][0]': POST_QUERYResult;
    '*[_type == "sustainabilitySection"][0]{\n  bgImage {\n    asset->{\n      _id,\n      url\n    },\n    alt\n  },\n  sustainText\n}': SUSTAINABILITY_SECTION_QUERYResult;
    '*[_type == "aboutSection"][0]{\n  title1,\n  title2,\n  "aboutImage": {\n    "asset": aboutImage.asset->{\n      _id,\n      url\n    },\n    "alt": aboutImage.alt\n  },\n  hoverLinkText,\n  hoverLinkHref\n}': ABOUT_SECTION_QUERYResult;
    '*[_type == "clinic"][0]{\n  "clinicImage": {\n    "asset": clinicImage.asset->{\n      _id,\n      url\n    },\n    "alt": clinicImage.alt\n  },\n  content\n}': CLINIC_SECTION_QUERYResult;
    '*[_type == "cafeSection"][0] {\n  cafeImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  title,\n  content,\n  hoverLinkText,\n  hoverLinkHref,\n  meta {\n    title,\n    description\n  }\n}': CAFE_QUERYResult;
    '*[_type == "blogSection"][0]{\n  sectionTitle,\n  hoverLinkText,\n  hoverLinkHref\n}': BLOG_SECTION_QUERYResult;
    '*[_type == "ourServices"][0]{\n  title,\n  "image": image.asset->url,\n  content\n}': OURSERVICES_QUERYResult;
    '*[_type == "service" && isActive == true]{\n  "slug": slug.current,\n  "hero_image": hero_image.asset->url,\n  "altText": hero_image.alt,\n  }': SERVICES_QUERYResult;
    '*[_type == "service" && isActive == true]{\n    title,\n    "slug": slug.current,\n    "hero_image": hero_image.asset->url,\n    "hero_alt": hero_image.alt,\n    }': ALL_SERVICES_QUERYResult;
    '*[_type == "servicesHeroSection"][0]{\n  "heroSection": {\n    title,\n    "image": image.asset->url,\n    "alt": image.alt,\n    subtitle\n  },\n  "seo": \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n,\n  "services": *[_type == "service" && isActive == true]{\n    title,\n    "slug": slug.current,\n    "hero_image": hero_image.asset->url,\n    "hero_alt": hero_image.alt,\n    },\n  }': SERVICES_PAGE_QUERYResult;
    '*[_type == "servicesSection"][0]{\n  sectionTitle,\n  hoverLinkText,\n  hoverLinkHref,\n  "services": *[_type == "service" && isActive == true]{\n    title,\n    "slug": slug.current,\n    "hero_image": hero_image.asset->url,\n    "hero_alt": hero_image.alt\n  }\n}': SERVICES_SECTION_QUERYResult;
    '*[_type == "service" && isActive == true && defined(slug.current)] {\n  "params": {"slug": slug.current}\n}': SERVICES_SLUG_QUERYResult;
    '\n  *[_type == "service" && slug.current == $slug][0]{\n    title,\n    "slug": slug.current,\n    "hero_image": hero_image.asset->url,\n    "hero_alt": hero_image.alt,\n    "content_image": content_image.asset->url,\n    "content_alt": content_image.alt,\n    content,\n    "treatments": *[_type == "treatments" && service._ref == ^._id && isActive == true]{\n      _id,\n      title,\n      "slug": treatmentSlug.current,\n    },\n    \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n  }\n': SERVICE_BY_SLUG_QUERYResult;
    '*[_type == "treatments" && isActive == true]{\n  title,\n  "treatmentSlug": treatmentSlug.current,\n  "service": service->{\n    title,\n    "slug": slug.current\n  },\n  "image": image.asset->url,\n  "altText": image.alt,\n  content,\n\n}': TREATMENTS_QUERYResult;
    '*[_type == "metadatas"]{\n  datas\n}': METADATAS_QUERYResult;
    '*[_type == "metadatas"][0]{\n  datas\n}': METADATASone_QUERYResult;
    '*[_type == "metadatas" && defined(slug.current) ][0]{\n  "params": {"slug": slug.current}\n}': MetaData_SlugResult;
    '\n  *[_type == "metadatas"]{\n    "meta":datas[slug.current == $slug][0]{\n      title,\n      description\n    } \n  }[0]\n': METADATA_BY_SLUG_QUERYResult;
    '\n  *[_type == "metadatas" && datas[slug.current == $slug][0]]{\n      title,\n      description\n    } \n  \n': ANOTHERMETADATA_BY_SLUG_QUERYResult;
    '\n*[_type == "treatments" && isActive == true && treatmentSlug.current == $slug][0] {\n  title,\n  treatmentSlug,\n  "serviceName": service->title,\n  heroImage {\n    asset->{\n      url,      \n    },\n    heroAlt\n  },\n  intro {\n    subtitle,\n    introParagraph\n  },\n  quoteContent,\n  additionalSections[] {\n    sectionTitle,\n    sectionParagraph,\n    sectionImage {\n      "image": image.asset->url,\n      alt\n    }\n  },  \n  benefits {\n    title,\n    benefitsList[] {\n      title,\n      subtitle\n    }\n  },\n  cta {\n    ctaBg {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      }\n    },\n    ctaBgAlt,\n    ctaTitle,\n    ctaText,\n    ctaButtonText\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': TREATMENT_BY_SLUG_QUERYResult;
    '\n  *[_type == "footer"][0] {\n    contactInfo {\n      sectionTitle,\n      details[] {\n        label,\n        value\n      }\n    },\n    servicesSection[]-> {\n      title,\n      "slug": slug.current,\n      image {\n        asset-> {\n          _id,\n          url\n        },\n        alt\n      }\n    },\n    sections[] {\n      title,\n      links[] {\n        text,\n        href\n      }\n    },\n    socialLinksSection {\n      title,\n      links[] {\n        platform,\n        url\n      }\n    },\n    privacy {\n      links[] {\n        title,\n        href\n      }\n    }\n  }\n': FOOTER_QUERYResult;
    '*[_type == "productsSection"][0]{\n  sectionTitle,\n  hoverLinkText,\n  hoverLinkHref,\n  "products": *[_type == "product" && isActive == true]{\n    title,\n    description,\n    "slug": slug.current,\n    "image": image.asset->url,\n    "altText": image.alt\n  }\n}': PRODUCTS_SECTION_QUERYResult;
    '*[_type == "product" && isActive == true] {\n  title,\n  indepthblockinfo,\n  description,\n  "slug" : slug.current,\n  "banner": banner.asset->url,\n  "image": image.asset->url,\n  "altText": image.alt,\n  meta {\n    title,\n    description\n  }\n}': PRODUCTS_QUERYResult;
    '*[_type == "product" && isActive == true] {\n  title,\n  "slug": slug.current,\n}': PRODUCTS_NAVIGATION_QUERYResult;
    '*[_type == "product" && slug.current == $slug && isActive == true][0] {\n  title,\n  slug,\n  description,\n  image {\n    asset->,\n    alt\n  },\n  banner {\n    asset->,\n    alt\n  },\n  accordioninfo[] {\n    title,\n    description\n  },\n  callToAction,\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': PRODUCT_BY_SLUG_QUERYResult;
    '*[_type == "product" && slug.current == $slug][0]': PRODUCT_QUERYResult;
    '*[_type == "product" && isActive == true && defined(slug.current)] {\n  "params": {"slug": slug.current}\n}': PRODUCT_SLUG_QUERYResult;
    '*[_type == "navigation"][0]{\n  serviceLinks[]->{\n    title,\n    "slug": slug.current\n  },\n  aboutLinks[]{\n    title,\n    href,\n  },\n  navItems[]{\n    linkText,\n    href,\n    isServiceLinks,\n    isAboutLinks\n  }\n}': NAVIGATION_QUERYResult;
    '*[_type == "termOfUse"][0] {\n  title,\n  content,\n  meta {\n    title,\n    description\n  }\n}': TERMS_OF_USE_QUERYResult;
    '*[_type == "privacy"][0] {\n  title,\n  content,\n  meta {\n    title,\n    description\n  }\n}': PRIVACY_QUERYResult;
    '*[_type == "accessibility"][0] {\n  title,\n  content,\n  meta {\n    title,\n    description\n  }\n}': ACCESSIBILITY_QUERYResult;
    '*[_type == "surveySection"][0]{\n  bgImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  cta,\n  youformId,\n  content,\n  bold,\n  meta {\n    title,\n    description\n  }\n}': SURVEY_LINK_QUERYResult;
    '*[_type == "popup" && isActive == true][0]{\n  title,\n  content,\n  isActive,\n}': POPUP_CONTENT_QUERYResult;
    '*[_type == "feedbackLink"][0]{\n  linkText,\n  youformId\n}': FEEDBACK_LINK_QUERYResult;
    '*[_type == "aboutPage" && isActive == true] | order(_createdAt desc){\n  title,\n  "slug": slug.current,\n}': ABOUT_PAGES_QUERYResult;
    '*[_type == "ourStory" && pageActive == true][0]{\n  heroSection{\n    heroImage{\n      "image": image.asset->url,\n      alt\n    },\n    heroTitle,\n    heroSubtitle\n  },\n  quoteSection{\n    quoteImage{\n      "image": image.asset->url,\n      alt\n    },\n    quoteText\n  },\n  additionalSections[]{\n    sectionTitle,\n    sectionParagraph,\n    sectionImage{\n      "image": image.asset->url,\n      alt\n    }\n  },\n  ctaSection{\n    ctaSectionImage{\n      "image": image.asset->url,\n      alt\n    },\n    ctaSectionTitle,\n    ctaSectionParagraph,\n    ctaButton{\n      buttonText,\n      buttonLink\n    }\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': OUR_STORY_PAGE_QUERYResult;
    '*[_type == "ourTeam" && pageActive == true][0]{\n  heroSection{\n    heroTitle,\n    heroParagraph\n  },\n  teamMembers[] {\n    name,\n    role,\n    bio,\n    image {\n      asset-> {\n        url\n      }\n    }\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': OUR_TEAM_PAGE_QUERYResult;
    '*[_type == "missionAndValues" && pageActive == true][0]{\n heroSection{\n   heroImage{\n     image{\n       asset->\n     },\n     alt\n   }\n },\n additionalSections[]{\n    sectionTitle,\n    sectionParagraph,\n    sectionImage{\n      "image": image.asset->url,\n      alt\n    }\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': MISSION_AND_VALUES_QUERYResult;
    '*[_type == "sustainability" && pageActive == true][0] {\n  heroSection {\n    heroTitle,\n    heroParagraph,\n    heroImage {\n      "image": image.asset->url,\n      alt\n    }\n  },\n  additionalSections[] {\n    sectionTitle,\n    sectionParagraph,\n    sectionImage {\n      "image": image.asset->url,\n      alt\n    }\n  },\n  ctaSection {\n    ctaSectionImage {\n      "image": image.asset->url,\n      alt\n    },\n    ctaSectionTitle,\n    ctaSectionParagraph,\n    ctaButton {\n      buttonText,\n      buttonLink\n    }\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': SUSTAINABILITY_QUERYResult;
    '*[_type == "pillarsOfHealth" && pageActive == true][0] {\n  heroSection {\n    heroTitle,\n    heroParagraph,\n    heroImage {\n      "image": image.asset->url,\n      alt\n    }\n  },\n  pillars[] {\n    pillarName,\n    pillarDescription\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': PILLARS_OF_HEALTH_QUERYResult;
    '*[_type == "popupBanner" && isActive == true][0]{\n  title,\n  content,\n}': POPUP_BANNER_QUERYResult;
    '*[_type == "siteMetadata"]{\n  "url": favicon.asset->url\n}[0]': FAVICON_QUERYResult;
    '\n  *[_type == "siteMetadata"][0]{\n    homePageTitle,\n    templateTitlePrefix,\n    defaultDescription,\n    favicon {\n      asset -> {\n        url\n      }\n    },\n    keywords,\n    socialMeta {\n      title,\n      description,\n      ogImage {\n        asset -> {\n          url,\n          alt\n        }\n      },\n      twitterImage {\n        asset -> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n': SITE_METADATA_QUERYResult;
    '*[_type == "siteSettings"]{\n  brandName,\n  siteLogo{\n    asset->{\n      _id,\n      url\n    },\n  },\n  contactInfo{\n    email,\n    phone,\n    address{\n      street,\n      city,\n      state,\n      zip,\n      country\n    },\n    mapLink,\n  },\n  services[]->{\n    _key,\n    title,\n    "slug": slug.current,\n    isActive\n  },\n  "aboutPages": [\n    *[_type == "ourStory" && pageActive == true][0]{\n      "title": "Our Story",\n      "slug": "our-story"\n    },\n    *[_type == "ourTeam" && pageActive == true][0]{\n      "title": "Our Team",\n      "slug": "our-team"\n    },\n    *[_type == "missionAndValues" && pageActive == true][0]{\n      "title": "Mission and Values",\n      "slug": "mission-and-values"\n    },\n    *[_type == "sustainability" && pageActive == true][0]{\n      "title": "Sustainability",\n      "slug": "sustainability"\n    },\n    *[_type == "pillarsOfHealth" && pageActive == true][0]{\n      "title": "Pillars of Health",\n      "slug": "pillars-of-health"\n    },\n  ],\n  navLinks[]{\n    _key,\n    title,\n    href\n  },\n  footerNavLinks[]{\n    _key,\n    groupTitle,\n    links[]{\n      title,\n      slug {\n        current\n      }\n    }\n  },\n  legalLinks[]{\n    _key,\n    "title": @->title,\n    "slug": @->slug.current\n  },\n  socialMedia[]{\n    _key,\n    platform,\n    platformLogo{\n      asset->{\n        _id,\n        url\n      }\n    },\n    isActive,\n    url\n  }\n}[0]': SITE_SETTINGS_QUERYResult;
    '\n  *[_type == "primaryCTAButton"][0]{\n    ctaButton{\n      ctaText,\n      ctaLink,\n    }\n  }\n': PRIMARY_CTA_BUTTON_QUERYResult;
    '*[_type == "surveySection"][0]{\n  bgImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  cta,\n  youformId,\n  content,\n  bold,\n}': SURVEY_SECTION_QUERYResult;
    '*[_type == "newsletterSection"][0]{\n  bgImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  cta,\n  youformId,\n  content,\n  bold,\n}': NEWSLETTER_SECTION_QUERYResult;
    '*[_type == "heroSection"][0]{\n  videoID,\n  videoFile {\n    asset-> {\n      playbackId\n    }\n  },\n  heroText,\n}': HERO_SECTION_QUERYResult;
    '{\n  "siteSettings": *[_type == "siteSettings"]{\n  brandName,\n  siteLogo{\n    asset->{\n      _id,\n      url\n    },\n  },\n  contactInfo{\n    email,\n    phone,\n    address{\n      street,\n      city,\n      state,\n      zip,\n      country\n    },\n    mapLink,\n  },\n  services[]->{\n    _key,\n    title,\n    "slug": slug.current,\n    isActive\n  },\n  "aboutPages": [\n    *[_type == "ourStory" && pageActive == true][0]{\n      "title": "Our Story",\n      "slug": "our-story"\n    },\n    *[_type == "ourTeam" && pageActive == true][0]{\n      "title": "Our Team",\n      "slug": "our-team"\n    },\n    *[_type == "missionAndValues" && pageActive == true][0]{\n      "title": "Mission and Values",\n      "slug": "mission-and-values"\n    },\n    *[_type == "sustainability" && pageActive == true][0]{\n      "title": "Sustainability",\n      "slug": "sustainability"\n    },\n    *[_type == "pillarsOfHealth" && pageActive == true][0]{\n      "title": "Pillars of Health",\n      "slug": "pillars-of-health"\n    },\n  ],\n  navLinks[]{\n    _key,\n    title,\n    href\n  },\n  footerNavLinks[]{\n    _key,\n    groupTitle,\n    links[]{\n      title,\n      slug {\n        current\n      }\n    }\n  },\n  legalLinks[]{\n    _key,\n    "title": @->title,\n    "slug": @->slug.current\n  },\n  socialMedia[]{\n    _key,\n    platform,\n    platformLogo{\n      asset->{\n        _id,\n        url\n      }\n    },\n    isActive,\n    url\n  }\n}[0],\n  "primaryCTAButton": \n  *[_type == "primaryCTAButton"][0]{\n    ctaButton{\n      ctaText,\n      ctaLink,\n    }\n  }\n,\n  "navLinks": *[_type == "navigation"][0]{\n  serviceLinks[]->{\n    title,\n    "slug": slug.current\n  },\n  aboutLinks[]{\n    title,\n    href,\n  },\n  navItems[]{\n    linkText,\n    href,\n    isServiceLinks,\n    isAboutLinks\n  }\n},\n  "newsletterSection": *[_type == "newsletterSection"][0]{\n  bgImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  cta,\n  youformId,\n  content,\n  bold,\n},\n  "surveySection": *[_type == "surveySection"][0]{\n  bgImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  cta,\n  youformId,\n  content,\n  bold,\n},\n  "footer": \n  *[_type == "footer"][0] {\n    contactInfo {\n      sectionTitle,\n      details[] {\n        label,\n        value\n      }\n    },\n    servicesSection[]-> {\n      title,\n      "slug": slug.current,\n      image {\n        asset-> {\n          _id,\n          url\n        },\n        alt\n      }\n    },\n    sections[] {\n      title,\n      links[] {\n        text,\n        href\n      }\n    },\n    socialLinksSection {\n      title,\n      links[] {\n        platform,\n        url\n      }\n    },\n    privacy {\n      links[] {\n        title,\n        href\n      }\n    }\n  }\n,\n  "popupBanner": *[_type == "popupBanner" && isActive == true][0]{\n  title,\n  content,\n}\n}': LAYOUT_QUERYResult;
    '{\n  "heroSection": *[_type == "heroSection"][0]{\n  videoID,\n  videoFile {\n    asset-> {\n      playbackId\n    }\n  },\n  heroText,\n},\n  "primaryCTAButton": \n  *[_type == "primaryCTAButton"][0]{\n    ctaButton{\n      ctaText,\n      ctaLink,\n    }\n  }\n, \n  "aboutSection": *[_type == "aboutSection"][0]{\n  title1,\n  title2,\n  "aboutImage": {\n    "asset": aboutImage.asset->{\n      _id,\n      url\n    },\n    "alt": aboutImage.alt\n  },\n  hoverLinkText,\n  hoverLinkHref\n},\n  "clinicSection": *[_type == "clinic"][0]{\n  "clinicImage": {\n    "asset": clinicImage.asset->{\n      _id,\n      url\n    },\n    "alt": clinicImage.alt\n  },\n  content\n},\n  "servicesSection": *[_type == "servicesSection"][0]{\n  sectionTitle,\n  hoverLinkText,\n  hoverLinkHref,\n  "services": *[_type == "service" && isActive == true]{\n    title,\n    "slug": slug.current,\n    "hero_image": hero_image.asset->url,\n    "hero_alt": hero_image.alt\n  }\n},\n  "productsSection": *[_type == "productsSection"][0]{\n  sectionTitle,\n  hoverLinkText,\n  hoverLinkHref,\n  "products": *[_type == "product" && isActive == true]{\n    title,\n    description,\n    "slug": slug.current,\n    "image": image.asset->url,\n    "altText": image.alt\n  }\n},\n  "cafeSection": *[_type == "cafeSection"][0] {\n  cafeImage {\n    asset-> {\n      _id,\n      url\n    },\n    alt\n  },\n  title,\n  content,\n  hoverLinkText,\n  hoverLinkHref,\n  meta {\n    title,\n    description\n  }\n},\n  "blogSection": *[_type == "blogSection"][0]{\n  sectionTitle,\n  hoverLinkText,\n  hoverLinkHref\n},\n  "sustainabilitySection": *[_type == "sustainabilitySection"][0]{\n  bgImage {\n    asset->{\n      _id,\n      url\n    },\n    alt\n  },\n  sustainText\n},\n  "navigation": *[_type == "navigation"][0]{\n  serviceLinks[]->{\n    title,\n    "slug": slug.current\n  },\n  aboutLinks[]{\n    title,\n    href,\n  },\n  navItems[]{\n    linkText,\n    href,\n    isServiceLinks,\n    isAboutLinks\n  }\n},\n  "termsOfUse": *[_type == "termOfUse"][0] {\n  title,\n  content,\n  meta {\n    title,\n    description\n  }\n},\n  "privacy": *[_type == "privacy"][0] {\n  title,\n  content,\n  meta {\n    title,\n    description\n  }\n},\n  "accessibility": *[_type == "accessibility"][0] {\n  title,\n  content,\n  meta {\n    title,\n    description\n  }\n},\n  "footer": \n  *[_type == "footer"][0] {\n    contactInfo {\n      sectionTitle,\n      details[] {\n        label,\n        value\n      }\n    },\n    servicesSection[]-> {\n      title,\n      "slug": slug.current,\n      image {\n        asset-> {\n          _id,\n          url\n        },\n        alt\n      }\n    },\n    sections[] {\n      title,\n      links[] {\n        text,\n        href\n      }\n    },\n    socialLinksSection {\n      title,\n      links[] {\n        platform,\n        url\n      }\n    },\n    privacy {\n      links[] {\n        title,\n        href\n      }\n    }\n  }\n,\n}': HOME_PAGE_QUERYResult;
    '*[_type == "siteSettings"][0]{\n  "brandName": brandName,\n  contactInfo{\n    email,\n    phone,\n    address{\n      street,\n      city,\n      state,\n      zip,\n      country\n    },\n    mapLink,\n  },\n}': CONTACT_INFO_QUERYResult;
    '{\n  "contactInfo": *[_type == "siteSettings"][0]{\n  "brandName": brandName,\n  contactInfo{\n    email,\n    phone,\n    address{\n      street,\n      city,\n      state,\n      zip,\n      country\n    },\n    mapLink,\n  },\n},\n  "page": *[_type == "contactPage"][0]{\n    heroSection{\n      title,\n      heroImage {\n        "image": image.asset->url,\n        alt\n      }\n    },\n    mapURL,\n    businessHours{\n      standardHours,\n      customStandardHours,\n      daysOpen,\n      exceptions[]{\n        day,\n        hours\n      }\n    },\n    \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n  },\n}': CONTACT_PAGE_QUERYResult;
    '*[_type == "post" && published == true] {\n  _id,\n  title,\n  publishedAt,\n  "slug": slug.current,\n  excerpt,\n  "author": author->{\n    name,\n    image {\n      asset-> {\n        url\n      }\n    }\n  },\n  mainImage {\n    asset->,\n    alt\n  },\n} | order(publishedAt desc)': GET_ALL_POSTS_QUERYResult;
    '*[_type == "post" && published == true && slug.current == $slug][0] {\n  title,\n  publishedAt,\n  slug,\n  "author": author->{\n    name,\n    image {\n      asset-> {\n        url\n      }\n    }\n  },\n  "mainImage": {\n    "image": mainImage.asset->url,\n    "alt": mainImage.alt\n  },\n  sections[] {\n    sectionTitle,\n    sectionParagraph,\n    sectionImage {\n      "image": image.asset->url,\n      "alt": image.alt\n    }\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': GET_POST_BY_SLUG_QUERYResult;
    '*[_type == "cafePage" && pageActive == true][0]{\n heroSection{\n   heroImage{\n     image{\n       asset->\n     },\n     alt\n   }\n },\n additionalSections[]{\n    sectionTitle,\n    sectionParagraph,\n    sectionImage{\n      "image": image.asset->url,\n      alt\n    }\n  },\n  \n  seo{\n    pageTitle,\n    pageDescription,\n    socialMeta{\n      ogImage{\n        asset-> {\n          url,\n          alt\n        }\n      },\n      twitterImage{\n        asset-> {\n          url,\n          alt\n        }\n      }\n    }\n  }\n\n}': CAFE_PAGE_QUERYResult;
    '{\n  "services": *[_type == "service" && isActive == true].slug.current,\n  "treatments": *[_type == "treatments" && isActive == true]{\n    "serviceSlug": service->slug.current,\n    "treatmentSlug": treatmentSlug.current\n  },\n  "products": *[_type == "product" && isActive == true].slug.current,\n  "posts": *[_type == "post" && defined(slug)].slug.current,\n  "team": *[_type == "ourTeam" && pageActive == true]{_id},\n  "story": *[_type == "ourStory" && pageActive == true]{_id},\n  "missionValues": *[_type == "missionAndValues" && pageActive == true]{_id},\n  "sustainability": *[_type == "sustainability" && pageActive == true]{_id},\n  "pillarsHealth": *[_type == "pillarsOfHealth" && pageActive == true]{_id},\n  "cafe": *[_type == "cafePage" && pageActive == true]{_id}\n}': SITEMAP_QUERYResult;
  }
}
